@model IEnumerable<OceanTechLevel1.Models.Province>

@{
    ViewData["Title"] = "Danh Mục Tỉnh";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container">
    <h2>Danh sách Tỉnh</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <a href="/Province/Create" class="btn btn-info">Thêm mới Tỉnh</a>

        @using (Html.BeginForm("Index", "Province", FormMethod.Get))
        {
            <div class="input-group" style="width: 300px;">
                <input type="text" name="searchTerm" placeholder="Tìm kiếm..." class="form-control" value="@Context.Request.Query["searchTerm"].FirstOrDefault()" />
                <button type="submit" class="btn btn-primary">Tìm kiếm</button>
            </div>
        }
    </div>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>ID</th>
                <th>Tên Tỉnh</th>
                <th>Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var province in Model)
            {
                <tr>
                    <td>@province.ProvinceId</td>
                    <td>@province.ProvinceName</td>
                    <td>
                        <a href="/Province/edit/@province.ProvinceId" class="btn btn-warning btn-sm">Sửa</a>

                        <!-- Form xóa -->
                        <form action="/Province/Delete/@province.ProvinceId" method="post" style="display:inline;" onsubmit="return confirmDelete();">
                            <button type="submit" class="btn btn-danger btn-sm">Xóa</button>
                        </form>
                    </td>
                </tr>
            }
            <tr>
                <td colspan="3">
                    @{
                        int PrevPage = ViewBag.Page - 1;
                        if (PrevPage <= 0)
                        {
                            PrevPage = 1;
                        }
                        int NextPage = ViewBag.Page + 1;
                        if (NextPage > ViewBag.NoOfPages)
                        {
                            NextPage = ViewBag.NoOfPages;
                        }

                        // Limit the number of visible pages
                        int maxVisiblePages = 5; // Number of pages to show around the current page
                        int startPage = Math.Max(1, ViewBag.Page - (maxVisiblePages / 2));
                        int endPage = Math.Min(ViewBag.NoOfPages, ViewBag.Page + (maxVisiblePages / 2));
                    }
                    <ul class="pagination justify-content-center">
                        <!-- Previous Button -->
                        <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", "Province", new { page = PrevPage, searchTerm = Context.Request.Query["searchTerm"].FirstOrDefault() })">
                                Prev
                            </a>
                        </li>

                        <!-- First Page -->
                        @if (startPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Province", new { page = 1, searchTerm = Context.Request.Query["searchTerm"].FirstOrDefault() })">
                                    1
                                </a>
                            </li>
                            @if (startPage > 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                        }

                        <!-- Visible Page Links -->
                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == ViewBag.Page ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Province", new { page = i, searchTerm = Context.Request.Query["searchTerm"].FirstOrDefault() })">
                                    @i
                                </a>
                            </li>
                        }

                        <!-- Last Page -->
                        @if (endPage < ViewBag.NoOfPages)
                        {
                            @if (endPage < ViewBag.NoOfPages - 1)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Province", new { page = ViewBag.NoOfPages, searchTerm = Context.Request.Query["searchTerm"].FirstOrDefault() })">
                                    @ViewBag.NoOfPages
                                </a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @(ViewBag.Page == ViewBag.NoOfPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", "Province", new { page = NextPage, searchTerm = Context.Request.Query["searchTerm"].FirstOrDefault() })">
                                Next
                            </a>
                        </li>
                    </ul>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<script>
    function confirmDelete() {
        return confirm('Bạn có chắc chắn muốn xóa tỉnh này cùng với các huyện và xã liên quan?');
    }
</script>
